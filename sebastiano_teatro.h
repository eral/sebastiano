#pragma once


//------ Include ---------------------- インクルード ---------------------------
#include "Arduino.h"
#include "sebastiano_scena.h"


//------ Debug ------------------------ デバッグ -------------------------------
#if defined(_DEBUG)
#endif //#if defined(_DEBUG)
//------ Macro ------------------------ マクロ ---------------------------------


namespace sebastiano {
//------ Class ------------------------ クラス ---------------------------------
/*!	@class
	@brief	テアトロクラス
		シーンの管理を提供します。
*/
class teatro {
	//-- Constant --------------------- 定数 -----------------------------------
protected:
private:
public:
	struct input_axis_type {
		int8_t	axis[2];
	};
	typedef uint8_t input_button_type;
	struct input_type : input_axis_type {
		input_button_type	button;
	};
	typedef input_type(*input_function_type)(void *data);


	//-- Public Variable -------------- 公開変数 -------------------------------
	//-- Public Function -------------- 公開関数 -------------------------------
	//==============================================================================
	/*! teatro::create_instance
		インスタンス構築
	
		@return インスタンス
	/*///===========================================================================
	static teatro &create_instance();

	//==============================================================================
	/*! teatro::operator()
		更新
	
		@return インスタンス
	/*///===========================================================================
	void operator()();

	//==============================================================================
	/*! teatro::push
		シーンプッシュ

		@param	scene	[in]	シーン
	
		@note
			シーンは破棄時に delete されます。
	/*///===========================================================================
	void push(scena *scene);


	//-- Geter Function --------------- 取得関数 -------------------------------
	//==============================================================================
	/*! teatro::get_delta_us
		前回からの経過マイクロ秒取得
	
		@return 前回からの経過マイクロ秒
	/*///===========================================================================
	uint32_t get_delta_us() const;
	
	//==============================================================================
	/*! teatro::get_direct_axis
		軸入力取得
	
		@return 軸入力
	/*///===========================================================================
	input_axis_type get_direct_axis() const;

	//==============================================================================
	/*! teatro::get_direct_button
		ボタン入力取得
	
		@return ボタン入力
	/*///===========================================================================
	input_button_type get_direct_button() const;

	//==============================================================================
	/*! teatro::get_onedge_button
		ONエッジ入力取得
	
		@return ONエッジ入力
	/*///===========================================================================
	input_button_type get_onedge_button() const;

	//==============================================================================
	/*! teatro::get_offedge_button
		OFFエッジ入力取得
	
		@return OFFエッジ入力
	/*///===========================================================================
	input_button_type get_offedge_button() const;


	//-- Seter Function --------------- 設定関数 -------------------------------
	//==============================================================================
	/*! teatro::set_input_function
		入力関数設定
	
		@param	func	[in]	入力コールバック関数
		@param	data	[in]	入力コールバック関数引数
	/*///===========================================================================
	void set_input_function(input_function_type func, void *data = NULL);


	//-- Constructor And Destructor --- コンストラクタ・デストラクタ -----------
	//==============================================================================
	/*! teatro::teatro
		デフォルトコンストラクタ
	/*///===========================================================================
private:
	teatro();

	//==============================================================================
	/*! teatro::teatro
		コピーコンストラクタ
	
		@note
			コピー禁止
	/*///===========================================================================
private:
	teatro(const teatro &src);
	teatro &operator=(const teatro &src);

	//==============================================================================
	/*! teatro::~teatro
		デストラクタ
	/*///===========================================================================
public:
	~teatro();


	//-- Local Constant --------------- ローカル定数 ---------------------------
protected:
private:
	//-- Local Variable --------------- ローカル変数 ---------------------------
protected:
private:
	uint8_t		m_scene_size;		//<シーン数
	scena		*m_scene_buffer[8];	//<シーンバッファ
	uint32_t	m_last_update_time;	//<前回の更新時刻
	uint32_t	m_delta_us;			//<前回の経過マイクロ秒
	struct {
		input_function_type	func;
		void				*data;
		input_type			crnt_state;
		input_button_type	prev_button;
	}			m_input;			//<入力関数


	static uint8_t s_instance[];


	//-- Local Function --------------- ローカル関数 ---------------------------
protected:
private:
	void *operator new(size_t size, void *buf);
	void operator delete(void *ptr, void *buf);
	void update_input();


//------------------------------------------------------------------------------
}; //class teatro
















} //namespace sebastiano



